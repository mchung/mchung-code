# Each new term in the Fibonacci sequence is generated by adding the previous 
# two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# Find the sum of all the even-valued terms in the sequence which do not exceed 
# four million.

# Asking to sum fib values that do not exceed 4000000?
def fib1(n = 4000000, &block)
  x = 1
  y = 1
  while x < n
    x, y = y, x+y 
    yield x, y if block_given?
  end
end

def fib2(&block)
  x = 1
  y = 1
  while true
    x, y = y, x+y
    break if x > 4000000
    yield x, y if block_given?
  end 
end

def fib3(&block)
  x = 1
  y = 1
  begin
    x, y = y, x+y
    yield x, y if block_given?
  end while x < 4000000
end

sum = 0
fib1 do |x, y|
  sum += x if x%2 == 0
end
#puts sum # 4613732

sum = 0
fib2 do |x, y|
  sum +=x if x%2 == 0
end
#puts sum # 4613732

sum = 0
fib3 do |x, y|
  sum += x if x%2 == 0
end
puts sum # 4613732
